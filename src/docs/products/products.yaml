paths:
  /api/products:
    get:
      summary: Obtenemos todos los productos de la BD
      tags:
        - Products
      responses:
        "200":
          description: Obtienen todos los productos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor
    post:
      summary: Este endpoint crea un usuario
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "201":
          description: Producto creado correctamente
  /api/products/{uid}:
    get:
      summary: Obtiene un solo producto por ID
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: id del prducto que se quire buscar
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error interno del servidor
    put:
      summary: Actualizamos Producto por ID
      tags:
        - Products
      parameters:
        - name: uid
          in: path
          required: true
          description: id del producto que se quire actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: Producto actualizado correctamente
        "404":
          description: Producto no encontrado
        "500":
          description: Error interno del servidor

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        first_name:
          type: string
          description: Nombre del Producto
        last_name:
          type: string
          description: Descripcion del productp
        price:
          type: string
          description: Precio del producto
      example:
        _id: ObjectId('123456')
        first_name: iphone 15
        last_name: lo ultimo en tecnologia
        price: 200
  requestBodies:
    createProduct:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del producto
        last_name:
          type: string
          description: Descripcion del producto
        price:
          type: number
          description: Precio del producto
      example:
        first_name: iphone 13
        description: con camara trasera de 20mp
        price: 150
    updateProduct:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del producto
        last_name:
          type: string
          description: Descripcion del producto
        price:
          type: number
          description: Precio del producto
      example:
        first_name: iphone 14
        description: gran telefono celular
        price: 1234
